\hypertarget{classBmp__image}{}\section{Bmp\+\_\+image Class Reference}
\label{classBmp__image}\index{Bmp\+\_\+image@{Bmp\+\_\+image}}


Abstract base class for all \hyperlink{classBmp__image}{Bmp\+\_\+image} classes with different bitcounts.  




{\ttfamily \#include $<$bmp\+\_\+image.\+h$>$}



Inheritance diagram for Bmp\+\_\+image\+:
% FIG 0
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
virtual \hyperlink{classBmp__image_a0c257dc70849f3f3e5f617ddfe99c829}{$\sim$\+Bmp\+\_\+image} ()
\item 
virtual void \hyperlink{classBmp__image_a24042c8e91d304ea22e1e039edc83998}{set\+\_\+color} (int x, int y, Q\+Color const \&color)=0
\begin{DoxyCompactList}\small\item\em Method to set color in (x,y) \end{DoxyCompactList}\item 
virtual int \hyperlink{classBmp__image_adf8db494c6b0a7921cacec632286fe4a}{get\+\_\+size} () const =0
\begin{DoxyCompactList}\small\item\em Method to get image size. \end{DoxyCompactList}\item 
virtual int \hyperlink{classBmp__image_a0a0329c5ebc48fce5d5a56392f358e48}{get\+\_\+height} () const =0
\begin{DoxyCompactList}\small\item\em Method to get image height. \end{DoxyCompactList}\item 
virtual int \hyperlink{classBmp__image_a83a11a4a271c2731857fcd692e246e62}{get\+\_\+width} () const =0
\begin{DoxyCompactList}\small\item\em Method to get image width. \end{DoxyCompactList}\item 
virtual short \hyperlink{classBmp__image_a6736988be6ecaa1f72a2e9480c9fcf99}{get\+\_\+bitcount} () const =0
\begin{DoxyCompactList}\small\item\em Method to get image bitcount. \end{DoxyCompactList}\item 
virtual uint8\+\_\+t $\ast$ \hyperlink{classBmp__image_aa27bbe7f0873571fd96c02adcbd1417e}{get\+\_\+raster} () const =0
\begin{DoxyCompactList}\small\item\em Method to get raster image. \end{DoxyCompactList}\item 
virtual uint8\+\_\+t \hyperlink{classBmp__image_ad0ff33d202bb27d64f91b032c305e62f}{get\+\_\+raster} (int x, int y) const =0
\begin{DoxyCompactList}\small\item\em Method to get specific raster image byte. \end{DoxyCompactList}\item 
virtual Q\+Color \hyperlink{classBmp__image_a93c070d96969a10fe8c0fd4a5a7916f4}{get\+\_\+color} (int x, int y) const =0
\begin{DoxyCompactList}\small\item\em Method to get color of specific pixel. \end{DoxyCompactList}\item 
virtual Q\+Image \hyperlink{classBmp__image_aff139277fdd9ff07cbf0a1d22b5f87c7}{get\+\_\+q\+Image} () const =0
\begin{DoxyCompactList}\small\item\em Method to get Q\+Image(image) \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_a59f30b07ebcde7925853909bc549bada}{invert\+\_\+color} ()\hypertarget{classBmp__image_a59f30b07ebcde7925853909bc549bada}{}\label{classBmp__image_a59f30b07ebcde7925853909bc549bada}

\begin{DoxyCompactList}\small\item\em Method to invert whole image. \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_adaff46b8654598f7dac0290a01394ff1}{grayscale} ()\hypertarget{classBmp__image_adaff46b8654598f7dac0290a01394ff1}{}\label{classBmp__image_adaff46b8654598f7dac0290a01394ff1}

\begin{DoxyCompactList}\small\item\em Method to grayscale whole image. \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_a0d35b7f51a420dd3974579aca1eadf2a}{invert\+\_\+color} (int x1, int y1, int x2, int y2)
\begin{DoxyCompactList}\small\item\em Method to invert selected rectangle. \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_aa0debc9672fdd07b50d72b6a319ca776}{grayscale} (int x1, int y1, int x2, int y2)
\begin{DoxyCompactList}\small\item\em Method to grayscale selected rectangle. \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_a9fc54a7fca255360756606ca392de2c8}{crop} (int vertical\+\_\+crop, int horizontal\+\_\+crop, \hyperlink{namespaceBmp_a17aedbe2a7f4fccdb8542a417187eea7}{Bmp\+::\+Resize\+\_\+direction} direction)
\begin{DoxyCompactList}\small\item\em Method to crop image. \end{DoxyCompactList}\item 
virtual void \hyperlink{classBmp__image_aafc757d963b427f533698236527ea301}{expanse} (int vertical\+\_\+exp, int horizontal\+\_\+crop, \hyperlink{namespaceBmp_a17aedbe2a7f4fccdb8542a417187eea7}{Bmp\+::\+Resize\+\_\+direction} direction, Q\+Color color)
\begin{DoxyCompactList}\small\item\em Method to expanse image with some color. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Abstract base class for all \hyperlink{classBmp__image}{Bmp\+\_\+image} classes with different bitcounts. 

\subsection{Constructor \& Destructor Documentation}
\index{Bmp\+\_\+image@{Bmp\+\_\+image}!````~Bmp\+\_\+image@{$\sim$\+Bmp\+\_\+image}}
\index{````~Bmp\+\_\+image@{$\sim$\+Bmp\+\_\+image}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{$\sim$\+Bmp\+\_\+image()}{~Bmp_image()}}]{\setlength{\rightskip}{0pt plus 5cm}Bmp\+\_\+image\+::$\sim$\+Bmp\+\_\+image (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [virtual]}}\hypertarget{classBmp__image_a0c257dc70849f3f3e5f617ddfe99c829}{}\label{classBmp__image_a0c257dc70849f3f3e5f617ddfe99c829}
virtual distuctor 

\subsection{Member Function Documentation}
\index{Bmp\+\_\+image@{Bmp\+\_\+image}!crop@{crop}}
\index{crop@{crop}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{crop(int vertical\+\_\+crop, int horizontal\+\_\+crop, Bmp\+::\+Resize\+\_\+direction direction)}{crop(int vertical_crop, int horizontal_crop, Bmp::Resize_direction direction)}}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Bmp\+\_\+image\+::crop (
\begin{DoxyParamCaption}
\item[{int}]{vertical\+\_\+crop, }
\item[{int}]{horizontal\+\_\+crop, }
\item[{{\bf Bmp\+::\+Resize\+\_\+direction}}]{direction}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [virtual]}}\hypertarget{classBmp__image_a9fc54a7fca255360756606ca392de2c8}{}\label{classBmp__image_a9fc54a7fca255360756606ca392de2c8}


Method to crop image. 


\begin{DoxyParams}{Parameters}
{\em vertical\+\_\+crop} & Vertical crop size in pixels \\
\hline
{\em horizontal\+\_\+crop} & Horizontal crop size in pixels \\
\hline
{\em direction} & Crop direction \\
\hline
\end{DoxyParams}


Reimplemented in \hyperlink{classBmp__image24_a67fc5d7ff1d4d1886bf75b0cc56c8f4f}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!expanse@{expanse}}
\index{expanse@{expanse}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{expanse(int vertical\+\_\+exp, int horizontal\+\_\+crop, Bmp\+::\+Resize\+\_\+direction direction, Q\+Color color)}{expanse(int vertical_exp, int horizontal_crop, Bmp::Resize_direction direction, QColor color)}}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Bmp\+\_\+image\+::expanse (
\begin{DoxyParamCaption}
\item[{int}]{vertical\+\_\+exp, }
\item[{int}]{horizontal\+\_\+crop, }
\item[{{\bf Bmp\+::\+Resize\+\_\+direction}}]{direction, }
\item[{Q\+Color}]{color}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [virtual]}}\hypertarget{classBmp__image_aafc757d963b427f533698236527ea301}{}\label{classBmp__image_aafc757d963b427f533698236527ea301}


Method to expanse image with some color. 


\begin{DoxyParams}{Parameters}
{\em vertical\+\_\+exp} & Vertical expansion size in pixels \\
\hline
{\em horizontal\+\_\+exp} & Horizontal expansion size in pixels \\
\hline
{\em direction} & Expanse direction \\
\hline
{\em color} & Fill color \\
\hline
\end{DoxyParams}


Reimplemented in \hyperlink{classBmp__image24_a98e984b9e2edba193c5abe1a8372f0a8}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+bitcount@{get\+\_\+bitcount}}
\index{get\+\_\+bitcount@{get\+\_\+bitcount}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+bitcount() const =0}{get_bitcount() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}short Bmp\+\_\+image\+::get\+\_\+bitcount (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_a6736988be6ecaa1f72a2e9480c9fcf99}{}\label{classBmp__image_a6736988be6ecaa1f72a2e9480c9fcf99}


Method to get image bitcount. 

\begin{DoxyReturn}{Returns}
Image bitcount in bits/color 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_acc7ce112f71be8700cddc7f36497b277}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+color@{get\+\_\+color}}
\index{get\+\_\+color@{get\+\_\+color}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+color(int x, int y) const =0}{get_color(int x, int y) const =0}}]{\setlength{\rightskip}{0pt plus 5cm}virtual Q\+Color Bmp\+\_\+image\+::get\+\_\+color (
\begin{DoxyParamCaption}
\item[{int}]{x, }
\item[{int}]{y}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_a93c070d96969a10fe8c0fd4a5a7916f4}{}\label{classBmp__image_a93c070d96969a10fe8c0fd4a5a7916f4}


Method to get color of specific pixel. 

\begin{DoxyReturn}{Returns}
Color from pixel on position (row, column) 
\end{DoxyReturn}

\begin{DoxyParams}{Parameters}
{\em x} & x-\/axis byte coordinate \\
\hline
{\em y} & y-\/axis byte coordinate \\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classBmp__image24_a54dae200ec1977ebe1c1cd003f99cb33}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+height@{get\+\_\+height}}
\index{get\+\_\+height@{get\+\_\+height}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+height() const =0}{get_height() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}int Bmp\+\_\+image\+::get\+\_\+height (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_a0a0329c5ebc48fce5d5a56392f358e48}{}\label{classBmp__image_a0a0329c5ebc48fce5d5a56392f358e48}


Method to get image height. 

\begin{DoxyReturn}{Returns}
Image height in pixels 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_a5226e91244f5bd4eaae3dd50192d4c6d}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+q\+Image@{get\+\_\+q\+Image}}
\index{get\+\_\+q\+Image@{get\+\_\+q\+Image}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+q\+Image() const =0}{get_qImage() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}Q\+Image Bmp\+\_\+image\+::get\+\_\+q\+Image (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_aff139277fdd9ff07cbf0a1d22b5f87c7}{}\label{classBmp__image_aff139277fdd9ff07cbf0a1d22b5f87c7}


Method to get Q\+Image(image) 

\begin{DoxyReturn}{Returns}
Q\+Image image 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_a97c3e041a9427a654ed6ab320cb74254}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+raster@{get\+\_\+raster}}
\index{get\+\_\+raster@{get\+\_\+raster}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+raster() const =0}{get_raster() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}uint8\+\_\+t $\ast$$\ast$ Bmp\+\_\+image\+::get\+\_\+raster (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_aa27bbe7f0873571fd96c02adcbd1417e}{}\label{classBmp__image_aa27bbe7f0873571fd96c02adcbd1417e}


Method to get raster image. 

\begin{DoxyReturn}{Returns}
Image raster byte array like it implements in bmp file 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_aef9db2ede36ec54d6bfe2953f316e392}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+raster@{get\+\_\+raster}}
\index{get\+\_\+raster@{get\+\_\+raster}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+raster(int x, int y) const =0}{get_raster(int x, int y) const =0}}]{\setlength{\rightskip}{0pt plus 5cm}virtual uint8\+\_\+t Bmp\+\_\+image\+::get\+\_\+raster (
\begin{DoxyParamCaption}
\item[{int}]{x, }
\item[{int}]{y}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_ad0ff33d202bb27d64f91b032c305e62f}{}\label{classBmp__image_ad0ff33d202bb27d64f91b032c305e62f}


Method to get specific raster image byte. 

\begin{DoxyReturn}{Returns}
Value of byte on (x,y) image position 
\end{DoxyReturn}

\begin{DoxyParams}{Parameters}
{\em x} & x-\/axis byte coordinate \\
\hline
{\em y} & y-\/axis byte coordinate \\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classBmp__image24_a04175227264dc0265fcff2897ce496d0}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+size@{get\+\_\+size}}
\index{get\+\_\+size@{get\+\_\+size}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+size() const =0}{get_size() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}int Bmp\+\_\+image\+::get\+\_\+size (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_adf8db494c6b0a7921cacec632286fe4a}{}\label{classBmp__image_adf8db494c6b0a7921cacec632286fe4a}


Method to get image size. 

\begin{DoxyReturn}{Returns}
Image size in bytes 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_a575b96b6764ce9901e30ef7558034a71}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!get\+\_\+width@{get\+\_\+width}}
\index{get\+\_\+width@{get\+\_\+width}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{get\+\_\+width() const =0}{get_width() const =0}}]{\setlength{\rightskip}{0pt plus 5cm}int Bmp\+\_\+image\+::get\+\_\+width (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_a83a11a4a271c2731857fcd692e246e62}{}\label{classBmp__image_a83a11a4a271c2731857fcd692e246e62}


Method to get image width. 

\begin{DoxyReturn}{Returns}
Image width in pixels 
\end{DoxyReturn}


Implemented in \hyperlink{classBmp__image24_a5f5c2a29d89c5fbaa1b3312ae755adea}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!grayscale@{grayscale}}
\index{grayscale@{grayscale}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{grayscale(int x1, int y1, int x2, int y2)}{grayscale(int x1, int y1, int x2, int y2)}}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Bmp\+\_\+image\+::grayscale (
\begin{DoxyParamCaption}
\item[{int}]{x1, }
\item[{int}]{y1, }
\item[{int}]{x2, }
\item[{int}]{y2}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [virtual]}}\hypertarget{classBmp__image_aa0debc9672fdd07b50d72b6a319ca776}{}\label{classBmp__image_aa0debc9672fdd07b50d72b6a319ca776}


Method to grayscale selected rectangle. 


\begin{DoxyParams}{Parameters}
{\em x1} & x-\/axis first ractangle point сoodrdinate \\
\hline
{\em y1} & y-\/axis first ractangle point сoodrdinate \\
\hline
{\em x2} & x-\/axis opposite ractangle point сoodrdinate \\
\hline
{\em y2} & y-\/axis opposite ractangle point сoodrdinate \\
\hline
\end{DoxyParams}


Reimplemented in \hyperlink{classBmp__image24_a0e4ceb95e6b1ecd4f04ea2a025682591}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!invert\+\_\+color@{invert\+\_\+color}}
\index{invert\+\_\+color@{invert\+\_\+color}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{invert\+\_\+color(int x1, int y1, int x2, int y2)}{invert_color(int x1, int y1, int x2, int y2)}}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Bmp\+\_\+image\+::invert\+\_\+color (
\begin{DoxyParamCaption}
\item[{int}]{x1, }
\item[{int}]{y1, }
\item[{int}]{x2, }
\item[{int}]{y2}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [virtual]}}\hypertarget{classBmp__image_a0d35b7f51a420dd3974579aca1eadf2a}{}\label{classBmp__image_a0d35b7f51a420dd3974579aca1eadf2a}


Method to invert selected rectangle. 


\begin{DoxyParams}{Parameters}
{\em x1} & x-\/axis first ractangle point сoodrdinate \\
\hline
{\em y1} & y-\/axis first ractangle point сoodrdinate \\
\hline
{\em x2} & x-\/axis opposite ractangle point сoodrdinate \\
\hline
{\em y2} & y-\/axis opposite ractangle point сoodrdinate \\
\hline
\end{DoxyParams}


Reimplemented in \hyperlink{classBmp__image24_a428263c22edd8305804f079611a790c4}{Bmp\+\_\+image24}.

\index{Bmp\+\_\+image@{Bmp\+\_\+image}!set\+\_\+color@{set\+\_\+color}}
\index{set\+\_\+color@{set\+\_\+color}!Bmp\+\_\+image@{Bmp\+\_\+image}}
\subsubsection[{\texorpdfstring{set\+\_\+color(int x, int y, Q\+Color const \&color)=0}{set_color(int x, int y, QColor const &color)=0}}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Bmp\+\_\+image\+::set\+\_\+color (
\begin{DoxyParamCaption}
\item[{int}]{x, }
\item[{int}]{y, }
\item[{Q\+Color const \&}]{color}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [pure virtual]}}\hypertarget{classBmp__image_a24042c8e91d304ea22e1e039edc83998}{}\label{classBmp__image_a24042c8e91d304ea22e1e039edc83998}


Method to set color in (x,y) 


\begin{DoxyParams}{Parameters}
{\em x} & x-\/axis pixel coordinate \\
\hline
{\em y} & y-\/axis pixel coordinate \\
\hline
{\em color} & Setting color \\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classBmp__image24_ad9dca8f678dfd33fd5ec985b8f03b77f}{Bmp\+\_\+image24}.



The documentation for this class was generated from the following files\+:\begin{DoxyCompactItemize}
\item 
bmp\+\_\+image.\+h\item 
bmp\+\_\+image.\+cpp\end{DoxyCompactItemize}
